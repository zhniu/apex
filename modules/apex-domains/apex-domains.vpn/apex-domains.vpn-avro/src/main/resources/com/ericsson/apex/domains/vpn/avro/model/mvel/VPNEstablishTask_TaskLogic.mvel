import org.apache.avro.generic.GenericData.Array;
import org.apache.avro.generic.GenericRecord;
import org.apache.avro.Schema;

logger.debug(subject.getId() + ":" + subject.getTaskName());

System.err.println(inFields);
String vpnLinkName = inFields["Link"];

GenericRecord vpnLink    = getContextAlbum("VPNLinkAlbum")   .get(vpnLinkName);
GenericRecord vpnProblem = getContextAlbum("VPNProblemAlbum").get(vpnLinkName);

String incomingStatus = inFields["Status"];
Boolean incomingStatusChanged = (Boolean)inFields["StatusChanged"];

if (incomingStatus.equalsIgnoreCase("DOWN")) {
	vpnLink.put("active", false);
}
else {
	vpnLink.put("active", true);
}

long now = System.currentTimeMillis();

Array affectedCustomerArray = subject.getOutFieldSchemaHelper("AffectedCustomers").createNewInstance();

if (incomingStatusChanged == false) {
	outFields["Link"] = vpnLinkName;
	if (incomingStatus.equalsIgnoreCase("UP")) {
		outFields["ProblemStatus"] = "NOPROBLEM";
		outFields["AffectedCustomers"] = affectedCustomerArray;
	}
	else if (incomingStatus.equalsIgnoreCase("DOWN")) {
		for (String customerName: vpnProblem.get("affectedCustomers")) {
			affectedCustomerArray.add(customerName);
		}
		outFields["ProblemStatus"] = "STILLPROBLEM";
		outFields["AffectedCustomers"] = affectedCustomerArray;
	}
	else {
		System.err.println("VpnEstablishLogic: Unsupported link type!!!" + vpnLinkName + " " + incomingStatus);
	}
}
else if (incomingStatusChanged == true) {
	/* indicates new problem or new solution */
	if	(incomingStatus.equalsIgnoreCase("UP")) {
		/* A link that was down is now up */
		if (vpnProblem != null) {
			vpnProblem.put("endTime", now);
		}
		else {
			System.err.println("VpnEstablishLogic: Link change to UP, but with no report of a previous problem!!!" + vpnLinkName);
		}
		for (String customerName: vpnProblem.get("affectedCustomers")) {
			affectedCustomerArray.add(customerName);
		}
		outFields["Link"] = vpnLinkName;
		outFields["AffectedCustomers"] = affectedCustomerArray;
		outFields["ProblemStatus"] = "NEWSOLVED";
	}
	else if (incomingStatus.equalsIgnoreCase("DOWN")) {
		/* A link that was up is now down */
		if (vpnProblem == null) {
			vpnProblem = getContextAlbum("VPNProblemAlbum").getSchemaHelper().createNewInstance();
			vpnProblem.put("problemName", vpnLinkName);
			vpnProblem.put("startTime",   now);
			vpnProblem.put("affectedCustomers", new Array(0, Schema.createArray(vpnProblem.getSchema().getField("affectedCustomers").schema())));
			getContextAlbum("VPNProblemAlbum").put(vpnLinkName, vpnProblem);

			for (GenericRecord vpnCustomer : getContextAlbum("VPNCustomerAlbum").values()) {
				if (vpnCustomer.get("linksInUse").contains(vpnLinkName)) {
					vpnProblem.get("affectedCustomers").add(vpnCustomer.get("customerName"));
				}
			}

			getContextAlbum("VPNProblemAlbum").put(vpnLinkName, vpnProblem);

			for (String customerName: vpnProblem.get("affectedCustomers")) {
				affectedCustomerArray.add(customerName);
			}
			outFields["Link"] = vpnLinkName;
			outFields["AffectedCustomers"] = affectedCustomerArray;
			outFields["ProblemStatus"] = "NEWPROBLEM";
		}
		else {
			System.err.println("VpnEstablishLogic: Link change to DOWN, but with a report of a previous problem: " + vpnLinkName + " Not updating problem: " + vpnProblem);
			for (String customerName: vpnProblem.get("affectedCustomers")) {
				affectedCustomerArray.add(customerName);
			}
			outFields["Link"] = vpnLinkName;
			outFields["AffectedCustomers"] = affectedCustomerArray;
			outFields["ProblemStatus"] = "STILLPROBLEM";
		}
	}
	else {
		System.err.println("VpnEstablishLogic: Unsupported link type!!!" +  vpnLinkName + " " + incomingStatus);
	}
}
else {
	throw new IllegalArgumentException("MatchEvent down time cannot be less than 0");
}

System.err.println("outFields: " + outFields);
return true;

