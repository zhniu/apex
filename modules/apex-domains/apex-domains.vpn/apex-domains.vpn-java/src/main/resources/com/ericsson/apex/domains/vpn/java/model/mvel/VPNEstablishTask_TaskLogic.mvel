import com.ericsson.apex.domains.vpn.java.concepts.VPNLink;
import com.ericsson.apex.domains.vpn.java.concepts.VPNCustomer;
import com.ericsson.apex.domains.vpn.java.concepts.VPNProblem;
import com.ericsson.apex.domains.vpn.java.concepts.VPNCustomerArray;

logger.debug(subject.id + ":" + subject.taskName);

System.err.println(inFields);
String vpnLinkName = inFields["Link"];

VPNLink    vpnLink    = getContextAlbum("VPNLinkAlbum").get(vpnLinkName);
VPNProblem vpnProblem = getContextAlbum("VPNProblemAlbum").get(vpnLinkName);

String incomingStatus = inFields["Status"];
Boolean incomingStatusChanged = (Boolean)inFields["StatusChanged"];

if (incomingStatus.equalsIgnoreCase("DOWN")) {
	vpnLink.setActive(false);
}
else {
	vpnLink.setActive(true);
}

long now = System.currentTimeMillis();

if (incomingStatusChanged == false) {
	outFields["Link"] = vpnLinkName;
	if (incomingStatus.equalsIgnoreCase("UP")) {
		outFields["ProblemStatus"] = "NOPROBLEM";
		outFields["AffectedCustomers"] = new VPNCustomerArray();
	}
	else if (incomingStatus.equalsIgnoreCase("DOWN")) {
		outFields["ProblemStatus"] = "STILLPROBLEM";
		outFields["AffectedCustomers"] = new VPNCustomerArray(vpnProblem.getAffectedCustomers());
	}
	else {
		System.err.println("VpnEstablishLogic: Unsupported link type!!!" + vpnLinkName + " " + incomingStatus);
	}
}
else if (incomingStatusChanged == true) {
	/* indicates new problem or new solution */
	if	(incomingStatus.equalsIgnoreCase("UP")) {
		/* A link that was down is now up */
		if (vpnProblem != null) {
			vpnProblem.setEndTime(now);
		}
		else {
			System.err.println("VpnEstablishLogic: Link change to UP, but with no report of a previous problem!!!" + vpnLinkName);
		}
		outFields["Link"] = vpnLinkName;
		outFields["AffectedCustomers"] = new VPNCustomerArray(vpnProblem.getAffectedCustomers());
		outFields["ProblemStatus"] = "NEWSOLVED";
	}
	else if (incomingStatus.equalsIgnoreCase("DOWN")) {
		/* A link that was up is now down */
		if (vpnProblem == null) {
			vpnProblem = new VPNProblem(vpnLinkName);
			vpnProblem.setStartTime(now);

			for (VPNCustomer vpnCustomer : getContextAlbum("VPNCustomerAlbum").values()) {
				if (vpnCustomer.getLinksInUse().contains(vpnLinkName)) {
					vpnProblem.add(vpnCustomer);
				}
			}

			getContextAlbum("VPNProblemAlbum").put(vpnLinkName, vpnProblem);

			outFields["Link"] = vpnLinkName;
			outFields["AffectedCustomers"] = new VPNCustomerArray(vpnProblem.getAffectedCustomers());
			outFields["ProblemStatus"] = "NEWPROBLEM";
		}
		else {
			System.err.println("VpnEstablishLogic: Link change to DOWN, but with a report of a previous problem: " + vpnLinkName + " Not updating problem: " + vpnProblem);
			outFields["Link"] = vpnLinkName;
			outFields["AffectedCustomers"] = new VPNCustomerArray(vpnProblem.getAffectedCustomers());
			outFields["ProblemStatus"] = "STILLPROBLEM";
		}
	}
	else {
		System.err.println("VpnEstablishLogic: Unsupported link type!!!" +  vpnLinkName + " " + incomingStatus);
	}
}
else {
	throw new IllegalArgumentException("MatchEvent down time cannot be less than 0");
}

System.err.println("outFields: " + outFields);
return true;

